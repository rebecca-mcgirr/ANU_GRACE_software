#!/bin/csh -f

# script to plot the integrated change in mass (in terms of EWH) of the Caspian Sea mascons, for a given solution time series
#
# P. Tregoning
# 15 October 2019

if ($#argv == 0) then
  echo "sh_plot_caspian -msc_code Casp/Amaz/Thwait -f ~/gg/grace/tables/mascons_stage4_V003a -plot_only Y/N -series batch5_V003a_24hr -x xmin xmax -y ymin ymax -xanot 4f2 -yanot 100f50 -polygon Antarctic mascon.polygons Land/Ocean"
  exit
endif

gmt gmtset FONT_TITLE 25    >& /dev/null
gmt gmtset FONT_LABEL   15  >& /dev/null
gmt gmtset PAPER_MEDIA a4+  >& /dev/null

########## defaults #############
set version = ~/gt
set series = batch5_V003a_24hr
set xmin = 2002
set xmax = 2020
set ymin = -1000
set ymax = 1000
set xanot = 4f2
set yanot = 200f100
set mascon_file = ~/gg/grace/tables/mascons_stage4_V003a
set msc_code = Casp
set polygon = ""
set polygonfile = ~/gg/grace/tables/mascon.polygons
set plot_only = "N"
#################################

##################### DECIPHER COMMAND LINE #######################
while ($#argv > 0 )
  set input = ( $argv )
  switch($input[1])
    case -version:
      set version  = $input[2]
    breaksw
    case -f:
      set mascon_file  = $input[2]
    breaksw
    case -s*:
      set series  = $input[2]
    breaksw
    case -msc_code:
    case -code:
      set msc_code  = $input[2]
    breaksw
    case -y:
      set ymin = $input[2] ; shift argv  
      set ymax = $input[3] ; shift argv
    breaksw
    case -yanot:
      set yanot = $input[2]
    breaksw
    case -x:
      set xmin = $input[2] ; shift argv  
      set xmax = $input[3] ; shift argv
    breaksw
    case -xanot:
      set xanot = $input[2]
    breaksw
    case -poly*:
      set polygon = $input[2]
      set polyfile = $input[3]
      set msc_type = $input[4]
    breaksw
    case -plot_only:
      set plot_only = $input[2]
    breaksw
 endsw
  if ( $#argv > 0 ) shift argv
end
alldone:
######################################################################

if ($plot_only == "Y")then
  if($polygon != "")set msc_code = $polygon
  goto plot
endif



#######################################################################
#### make a list of the mascons from the mascon file for this particular 
#### primary mascon code
if($polygon == "")then
  set prim_nums = `grep "  P"$msc_code $mascon_file                          | awk '{printf "%5.5d\n", $1}'`
  set prim_area = `grep "  P"$msc_code $mascon_file                          | awk '{printf "%5.5d\n", $8/1.e6}'`
  set n_msc    = `echo $prim_nums | wc -w`
  echo "P"$msc_code " has " $n_msc" primary mascons" > ${msc_code}_${series}.dat
  echo "P"$msc_code " has " $n_msc" primary mascons" 
else
  echo "Will extract all primary mascons found within polygon: " $polygon "(from file " $polyfile ")"
  echo ${version}/util/grab_mascons $mascon_file junk $polygonfile $polygon $msc_type -10.
  ${version}/util/grab_mascons $mascon_file junk $polygonfile $polygon $msc_type -10. | grep "Primary mascon  " | awk '{if ($3 > 2) {print $3, $9}}' > poly_msc.tmp
  set prim_nums    = `cat poly_msc.tmp | awk '{printf "%5.5d\n", $1}'`
  set prim_area    = `cat poly_msc.tmp | awk '{printf "%15.6f\n", $2/1.e6}'`
  set n_msc       = `echo $prim_nums    | wc -w`
  echo "Polygon "$polygon " has " $n_msc" primary mascons" > ${msc_code}_${series}.dat
  echo "Polygon "$polygon " has " $n_msc" primary mascons" 
  set msc_code = $polygon
endif

#######################################################################



#######################################################################

foreach file (/scratch/compute1/pault/grace/raijin_results/fft/20??/addnorm*fft_${series}.fit)
  set epoch = `echo $file | cut -c63-69`
  set ymd = `echo $epoch | awk '{print substr($0,1,4), substr($0,6,2), 15}'`
  set dec_yr = `doy $ymd | tail -1 | awk '{print $3}'`

  set imsc = 1
  \rm ${msc_code}_${epoch}_${series}.dat >& /dev/null ; touch ${msc_code}_${epoch}_${series}.dat
  while ($imsc <= $n_msc)
    grep MC$prim_nums[$imsc] $file | awk '{print $6, $7, '$prim_area[$imsc]'}' >> ${msc_code}_${epoch}_${series}.dat
    set imsc = `echo $imsc | awk '{printf "%5.5d", $1 + 1}'`
  end
  set EWH = `weighted_sum ${msc_code}_${epoch}_${series}.dat 	 | tail -1 | awk '{print $5 * 1.e3}'`

  echo $dec_yr $EWH $msc_code $ymd[1] $ymd[2]
  echo $dec_yr $EWH >> ${msc_code}_${series}.dat

end
gmtinfo -h1 ${msc_code}_${series}.dat

plot:
echo "Plotting ..."
set outfile = ${msc_code}.ps
set proj = "-JX15/8"
set range = "-R$xmin/$xmax/$ymin/$ymax"

psxy $proj $range -W1,red ${msc_code}_${series}.dat -h1   -Ba${xanot}:"Year":/${yanot}:"EWH (mm)"::."$msc_code from solutions $series":neSW  -X3 -Y19.5 -P -K > $outfile
psxy $proj $range -Sc0.1 -Gred ${msc_code}_${series}.dat -h1  -O -K >> $outfile
#pstext $proj $range -F+fred -O -K << end_txt  >> $outfile
#2008.0 360 blah
#end_txt

gs $outfile



