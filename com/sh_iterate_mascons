#!/bin/csh -f

# script to iterate the graceorb/gracefit process, updating ONLY the a priori mascon values in the iterations. The 
# script pre-supposes that the ICs (pos/vel and, to some extent, bias/scale) have essentially converged to a solution
# that yields "reasonable" prefit pos/vel/kbrr residuals.
#
# P. Tregoning
# 29 May 2017

if ($#argv == 0 )then
  echo "sh_iterate_mascons -apr_IC file_of_solns -n_iter 5 -orbits_per_day 4"
  exit
endif


##################  Set  Defaults  ######################
set version = "~/gt"
set n_iter = 5
set n_orbits = 1
set reg_matrix = ../mascon_configurations/mascons_feb8_c_0.20_0.10_0.5.reg
set gracefit_cmd_file = ${version}/templates/gracefit_msc_template.cmd
set GRACE_input_template = $version/templates/GRACE.input_template
#########################################################


###############  Decipher  command  line  ###############
while ($#argv > 0 )
  set input = ( $argv )
  switch($input[1])
    case -apr_IC:
      set soln_files  = $input[2] ; shift argv
    breaksw
# number of iterations on the mascons
    case -n_iter:
      set n_iter  = $input[2] ; shift argv
    breaksw
# number of orbit segments per day
    case -orbits_per_day:
      set n_orbits  = $input[2] ; shift argv
    breaksw
# mascon regularisation file
    case -reg*:
      set reg_file  = $input[2] ; shift argv
    breaksw
 endsw
  if ( $#argv > 0 ) shift argv
end
alldone:
#########################################################



#########################################################
# Output the information describing the processing to be done
set IC_files = `cat $soln_files `  

echo "Input 24-hr IC files            : " $IC_files
echo "Number of iterations on mascons : " $n_iter
echo "Number of orbits per day        : " $n_orbits
#########################################################

##########   Mascon Iteration     L O O P  ##############
set iter = 0
while ($iter < $n_iter)

  #############      D A Y     L O O P  #################
  # loop over each day
  set ndays = `echo $IC_files | wc -w`
  set i = 1
  while ($i <= $ndays )
    set day = `echo $IC_files[$i] | cut -c4-13`
    echo "Iteration: " $iter " Processing day : " $day

    # run graceorb to generate GTORB files using the input ICs
    cd ../$day
    if($iter == 0)then
      set ending = `echo $IC_files[$i] | cut -c15-100`
      cat $GRACE_input_template | sed s/"APRIORI_FILE      : DUMMY_APRIORI_FILE"/"APRIORI_FILE      : "${ending}/ | sed s/"USE_APRIORI_MCS   : Y"/"USE_APRIORI_MCS   : N"/ > GRACE.input.iter$iter
    else
      cat $GRACE_input_template | sed s/"APRIORI_FILE      : DUMMY_APRIORI_FILE"/"APRIORI_FILE      : ..\/iterate_mascons\/"addnorm_${day}_iter`echo ${iter} | awk '{print $1 - 1}'`.vcv/ > GRACE.input.iter$iter
    endif


    # run graceorb to generate GTORB files using the input ICs and appropriate apriori mascons
    $version/graceorb/graceorb GRACE.input.iter$iter in_file_A_${day}_00 &
    $version/graceorb/graceorb GRACE.input.iter$iter in_file_B_${day}_00 &
    wait
    mv GTORB_${day}_00-00-00_A_02.bin GTORB_${day}_00-00-00_A_02.bin_msciter$iter
    mv GTORB_${day}_00-00-00_B_02.bin GTORB_${day}_00-00-00_B_02.bin_msciter$iter

    # now run gracefit, segmenting the 24hr orbit into 1 or more segments
    set epochs_per_orbit = `echo 17268 $n_orbits | awk '{print int( $1 / $2)}'`
    set ymd = `echo ${IC_files[$i]} | cut -c4-13 | sed s/"-"/" "/g `

    set iorbit = 1
    while ($iorbit <= $n_orbits)
      set start_epoch = `echo $iorbit $epochs_per_orbit | awk '{print 1 + ($1 - 1) * $2}'`
      set end_epoch   = `echo $iorbit $epochs_per_orbit | awk '{print 1 + $1 * $2}'`
      echo Start and end epochs "for" GRACEFIT orbit segment $iorbit : $start_epoch $end_epoch
      cat $gracefit_cmd_file | sed s/"START_NEQ"/$start_epoch/ | sed s/"END_NEQ"/$end_epoch/ > gracefit_iter${iter}.cmd
      $version/gracefit/gracefit gracefit_iter${iter}.cmd ${day}_iter${iter}_msc_orbit${iorbit}.rms 4 GTORB_${day}_00-00-00_A_02.bin_msciter$iter GTORB_${day}_00-00-00_B_02.bin_msciter$iter $ymd $reg_matrix 0 0 0 0 0 0 0 0 0 0 0 0
      @ iorbit = $iorbit + 1
    end  

    # end of gracefit solutions for given day
    echo "Completed GRACEFIT solutions for day : " $day

    @ i = $i + 1

  end      # end of day loop

  ##### Run Addnorm on all days for this mascon iteration #####
  cd ../iterate_mascons
  cat $gracefit_cmd_file | sed s/"START_NEQ"/" "/ | sed s/"END_NEQ"/" "/ > gracefit_for_addnorm.cmd
  echo "Y Y N"      > addnorm.cmd
  echo ${ndays}.0  >> addnorm.cmd
  echo $reg_file   >> addnorm.cmd
  echo $ndays      >> addnorm.cmd
  set i = 1
  while ($i <= $ndays)
    set day = `echo $IC_files[$i] | cut -c4-13`
    ls ../${day}/${day}_iter${iter}_msc_orbit?.norm >> addnorm_${iter}.cmd
    @ i = $i + 1
  end   # end of listing the available normal equation files

  # run addnorm
  $version/gracefit/addnorm addnorm_${iter}.cmd gracefit_for_addnorm.cmd
  # rename the output file
  mv -f addnorm.out addnorm_iter${iter}.out
  mv -f addnorm.vcv addnorm_iter${iter}.vcv

  # extract out the IC/mascon information to make daily vcv files for input into GRACEORB
  set i = 1
  while ($i <= $ndays )
    set ymd = `echo ${IC_files[$i]} | cut -c4-13 | sed s/"-"/" "/g `
    set day = `echo $IC_files[$i] | cut -c4-13`
    $version/util/addnorm2vcv addnorm_iter${iter}.vcv addnorm_${day}_iter${iter}.vcv $ymd pos_A vel_A scl_A bs__A msc_E

    @ i = $i + 1
  end   # end of loop extracting out daily vcv files with the addnorm estimate of the mascons

  @ iter = $iter + 1
end    # end of mascon iteration loop

#########################################################












