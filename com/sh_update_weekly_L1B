#!/bin/csh -f

# script to update a week of L1B GRACE-FO data
#
# P. Tregoning
# 8 February 2022

set version = ~/ga
set L1B_dir = /Mdata/GRACE/L1B

if ($#argv == 0)then
  echo "sh_update_weekly_L1B YYYY RL04  : update from the last available file in this year to the end of the year"
  exit
else
  set year = $1
  set RL_num = $2
endif

# define the months
set months = "01 02 03 04 05 06 07 08 09 10 11 12"
set days = "01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31"

# set to "N" the variable to initiate automated processing of any newly downloaded data
set start_processing = "N"

# set not_found variable
set not_found = "F"

# what is the most recent file of data in the archive for the requested year
set most_recent = `ls -l ${L1B_dir}/${RL_num}/${year} | tail -1 | awk '{print $9}'`

# what is the YYYY MM DD of this file?
set ymd = `echo $most_recent | cut -c12-21 | sed s/"-"/" "/g`
echo Most recent file found is for date $ymd "("$most_recent")"


# loop through from that day + 1 until no file is downloaded from the JPL archive
foreach month ($months)

    # set the days for specific months
    if($month == 02 && ($ymd[1] == 2024 || $ymd[1] == 2028) )then
        set days = "01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29"
    else if ($month == 02)then
        set days = "01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28"
    else if ($month == 04 || $month == 06 || $month == 09 || $month == 11)then
      set days = "01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30"
    else
      set days = "01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31"
    endif
      
    echo Month $month days = $days

    foreach day ($days)
      echo checking $month $day
      if (! -e ${L1B_dir}/${RL_num}/${year}/gracefo_1B_${year}-${month}-${day}_RL04.ascii.noLRI.tgz) then
        echo Downloading file gracefo_1B_${year}-${month}-${day}_RL04.ascii.noLRI.tgz
        # PT220712: we should start trying to get this from their cloud location instead.
        #echo  ${version}/com/sh_get_level1B_https_podaac $year $month $day RL04
        #${version}/com/sh_get_level1B_https_podaac $year $month $day RL04 
        echo  ${version}/com/sh_get_level1B_https $year $month $day RL04
        ${version}/com/sh_get_level1B_https $year $month $day RL04 
        ${version}/com/sh_get_level1B_https $year $month $day RL04 LRI
        ${version}/com/sh_get_level1B_https $year $month $day RL04 ACX
      else
        #ls -l ${L1B_dir}/${RL_num}/${year}/gracefo_1B_${year}-${month}-${day}_RL04.ascii.noLRI.tgz      
      endif
      
      # check whether the file was downloaded
      if (! -e gracefo_1B_${year}-${month}-${day}_RL04.ascii.noLRI.tgz && ! -e ${L1B_dir}/${RL_num}/${year}/gracefo_1B_${year}-${month}-${day}_RL04.ascii.noLRI.tgz)then
        echo "file " gracefo_1B_${year}-${month}-${day}_RL04.ascii.noLRI.tgz "not downloaded. Script stopped."
        set not_found = "T"
      else if (! -e ${L1B_dir}/${RL_num}/${year}/gracefo_1B_${year}-${month}-${day}_RL04.ascii.noLRI.tgz && -e gracefo_1B_${year}-${month}-${day}_RL04.ascii.noLRI.tgz)then
        echo "file " gracefo_1B_${year}-${month}-${day}_RL04.ascii.noLRI.tgz "moved to " ${L1B_dir}/${RL_num}/${year}
        mv gracefo_1B_${year}-${month}-${day}_RL04.ascii.noLRI.tgz ${L1B_dir}/${RL_num}/${year}
        mv gracefo_1B_${year}-${month}-${day}_RL04.ascii.LRI.tgz ${L1B_dir}/${RL_num}/${year}
        mv gracefo_1B_${year}-${month}-${day}_RL04.ascii.ASX.tgz ${L1B_dir}/${RL_num}/${year}

        # set to "Y" the variable to initiate automated processing of any newly downloaded data
        # PT220510: save the date of the first L1B data that was downloaded. Use it to initialise the processing of new data
        if($start_processing == "N")then
          # PT220614: fixed bug here. We actually need to process the previous day, because it won't have been done since it
          #           requires the next day of L1B data so that the accelerometer data can be filtered
          set gracesecs_yesterday = `~/ga/com/sh_graceseconds $year $month $day | awk '{print $1 - 86400.}'`
          set yesterday = `~/ga/com/sh_gracesecs_to_ymdhms $gracesecs_yesterday | awk '{print substr($1,1,4), substr($1,6,2),substr($1,9,2)}'`
          set start_processing = "Y"
        endif
        
      endif
      
      # PT220210: check whether data were found
      if ($not_found == "T")then
      
        # PT220210: so the script has now reached the end of the available L1B data at JPL. Either it found some new data when it 
        #           ran or it didn't. This information is available from the "start_processing" variable. If "Y", start the processing.
        
        # start processing any newly downloaded data ? If so, run the processing of it.
        # PT220510: initialise it with the year/month/day that needs to be processed
        if ($start_processing == "Y")${version}/com/sh_cron_solns $yesterday "continue" &

        # now exit this script
        exit

      endif
      
    end

end

