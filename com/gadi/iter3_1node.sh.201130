#!/bin/bash --norc

export LC_ALL="C"
export SHELL=$(type -p bash)

if [ $# -lt 3 ]
then
    echo "./batch_1node.sh filename startindx stopindx"
    exit;
fi


list_of_day=$1
declare -i start_indx=$2
declare -i stop_indx=$3
declare -i ndays=0
ndays=$(( stop_indx - start_indx + 1 ))
echo $ndays

declare -a days_arr
for (( i=0; i<=$ndays - 1 ; i++ ))
do 
    days_arr[$i]=`sed -n $((start_indx + i))p $list_of_day`
done


# IF APRIORI PUT FILENAME HERE
export APR_MSC=blahblah.vcv


export pos_unc=0.07
export vel_unc=0.07e-3
export kbra_unc=1.e-9
export kbrr_unc_iter3=10.e-6
export mission=0
export gracefit_cmdfile=gracefit.cmd.template_GRACE
export reg=~/gg/grace/tables/mascons_stage5_V005_200km.reg  
export msc_file=~/gg/grace/tables/mascons_stage5_V005_200km
export grace_root=/g/data/tn40/GRACE/sfw/grace/test_201014rev2
export CMD=`echo "CMD: " $0 $*`
export host=`hostname`

#module load parallel
 source ~/bin/setpath_GRACE
 echo "iter3_1node"
 echo 'List of modules loaded'; module list 2>&1
 echo 'LD_LIBRARY_PATH= ' ${LD_LIBRARY_PATH}
 echo 'PATH= ' ${PATH}


printf "Code will run the following days\n"
printf ' - %s on  %s\n' "${days_arr[@]}" "${host}"

# declare -f stage_init
#export pwd=/scratch/tn40/hm3063/grace/mrun #`pwd`

stage_init()
{
    #printf " --  Stage_init on day %s %(%Y%m%d-%H:%M:%S)T\n" "$1" "-1"
    _s=`date +%s`
    yr=`date --date ${1} +%Y`
    month=`date --date ${1} +%m`
    day=`date --date ${1} +%d`

    run_dir=msc${yr}-${month}-${day}
    work_dir=${PBS_JOBFS}/${run_dir}
    init_dir=${PBS_O_WORKDIR}/${yr}
    out_dir=${init_dir}/${run_dir}
    mkdir -p $work_dir
    mkdir -p $out_dir

    cd $work_dir
#    cd $out_dir
    echo $CMD > setup${yr}${month}${day}.log
    ${grace_root}/com/sh_setup_grace_200602 -t $yr $month $day 00 00 00 86280 -mission ${mission} -type h5 -acc_model therm fft none -mascon_file ${msc_file} -extend 21600 >> setup${yr}${month}${day}.log
    _e=`date +%s`
    printf " --  Stage_init on day %s %(%Y%m%d-%H:%M:%S)T  ... DONE in %i sec \n" "$1" "-1" "$((_e - _s))"
}

 stage3_orbs()
 {
#    printf " --  Stage_orb on day %s  %(%Y%m%d-%H:%M:%S)T\n" "$1" "-1"
    _s=`date +%s`
    yr=`date --date ${1} +%Y`
    month=`date --date ${1} +%m`
    day=`date --date ${1} +%d`
    run_dir=msc${yr}-${month}-${day}
    work_dir=${PBS_JOBFS}/${run_dir}
    init_dir=${PBS_O_WORKDIR}/${yr}
    out_dir=${init_dir}/${run_dir}
    cd ${work_dir}
    apr_IC=${yr}_IC.dat
    cp ${PBS_O_WORKDIR}/ICs/${apr_IC} .
    setup_cmdfile=GRACE.input
    cp ${setup_cmdfile}  ${setup_cmdfile}.iter3

    sed -i 's/APRIORI_FILE      :.*/APRIORI_FILE      : '"${apr_IC}"'/' ${setup_cmdfile}.iter3
    sed -i 's/USE_APRIORI_ICS   : 0/USE_APRIORI_ICS   : 15/'  ${setup_cmdfile}.iter3
    sed -i 's/MASCON            : N/MASCON            : Y/' ${setup_cmdfile}.iter3
    if [ ! -z "$APR_MSC" ] 
    then
	cp $APR_MSC .
	basename_apr=`basename $APR_MSC`
    	sed -i 's/MSC_APRIORI_FILE.*/MSC_APRIORI_FILE  : '"${basename_apr}"'/' ${setup_cmdfile}.iter3
        sed -i 's/USE_APRIORI_MCS.*/USE_APRIORI_MCS   : Y /' ${setup_cmdfile}.iter3
    fi
    OMP_NUM_THREADS=2
    ${grace_root}/graceorb/graceorb GRACE.input.iter3 in_file_A_${yr}-${month}-${day}_00 > gorbA${yr}${month}${day}.log &
    ${grace_root}/graceorb/graceorb GRACE.input.iter3 in_file_B_${yr}-${month}-${day}_00 > gorbB${yr}${month}${day}.log &
    wait
    _e=`date +%s`
    printf " --  Stage_orb on day %s  %(%Y%m%d-%H:%M:%S)T   ... DONE in %i sec\n" "$1" "-1" "$((_e - _s))"
}



stage3_fits()
{
    #printf " --  Stage_fits on day %s  %(%Y%m%d-%H:%M:%S)T  \n" "$1" "-1"
    _s=`date +%s`
    yr=`date --date ${1} +%Y`
    month=`date --date ${1} +%m`
    day=`date --date ${1} +%d`

    run_dir=msc${yr}-${month}-${day}
    work_dir=${PBS_JOBFS}/${run_dir}
    init_dir=${PBS_O_WORKDIR}/${yr}
    out_dir=${init_dir}/${run_dir}
    cd $work_dir

    cp ~/gg/grace/templates/${gracefit_cmdfile} gracefit_msc_iter3.cmd
    sed -i 's/shadow:   0/shadow:   0/'  gracefit_msc_iter3.cmd
    sed -i 's/ mission: M/ mission: '"$mission"'/' gracefit_msc_iter3.cmd
    sed -i 's/PPP/'"$pos_unc"'/g' gracefit_msc_iter3.cmd
    sed -i 's/VVV/'"$vel_unc"'/g' gracefit_msc_iter3.cmd
    sed -i 's/KBRR_SIG/'"$kbrr_unc_iter3"'/' gracefit_msc_iter3.cmd
    sed -i 's/KBRA_SIG/'"$kbra_unc"'/' gracefit_msc_iter3.cmd
    sed -i 's/SCLX/1.0/' gracefit_msc_iter3.cmd
    sed -i 's/SCLY/1.0/' gracefit_msc_iter3.cmd
    sed -i 's/SCLZ/1.0/' gracefit_msc_iter3.cmd
    sed -i 's/ kb_cos_fft: 0 / kb_cos_fft: 1 /' gracefit_msc_iter3.cmd
    sed -i 's/kb_NR: 0 0/kb_NR: 0 1/' gracefit_msc_iter3.cmd
    sed -i 's/mascons: .*/mascons: 1/' gracefit_msc_iter3.cmd
    sed -i 's/msc_len_const: .*/msc_len_const: 1/' gracefit_msc_iter3.cmd

    OMP_NUM_THREADS=12
    OPENBLAS_NUM_THREADS=12
    orb1=`ls GTORB_${yr}-${month}-${day}_*_A_*.h5`
    orb2=`ls GTORB_${yr}-${month}-${day}_*_B_*.h5`
    ${grace_root}/gracefit/gracefit gracefit_msc_iter3.cmd msc_${yr}${month}${day}.rms 4 $orb1 $orb2 $yr $month $day $reg 0 0 0 0 0 0 0 0 0 0 0 0 > gfit.log &
    wait
    du -sh .
    _e=`date +%s`
    # stage3_transfer $1
    ls -l > file_stats.log
    printf " --  Stage_fits on day %s  %(%Y%m%d-%H:%M:%S)T   ... DONE in %i sec \n" "$1" "-1" "$((_e - _s))"
    
    stage3_transfer $1
}




stage3_transfer()
{
    #printf " --  Stage_transfer on day %s\n" "$1"
    _s=`date +%s`
    yr=`date --date ${1} +%Y`
    month=`date --date ${1} +%m`
    day=`date --date ${1} +%d`

    run_dir=msc${yr}-${month}-${day}
    work_dir=${PBS_JOBFS}/${run_dir}
    init_dir=${PBS_O_WORKDIR}/${yr}
    out_dir=${init_dir}/${run_dir}
    cd $out_dir

    if ls ${work_dir}/*.fatal 1> /dev/null 2>&1; then
	rsync -ltr $work_dir/* .
	cd ..
	mv $run_dir ${run_dir}_failed
    else
	rsync -t $work_dir/*.fit .
	# rsync -t $work_dir/*.vcv .
	rsync -t $work_dir/*.norm .
	rsync -t $work_dir/*.status .
	rsync -t $work_dir/*.warning .
	rsync -t $work_dir/plt* .
	#  rsync -t $work_dir/emd* .
	#  rsync -t $work_dir/prefit* .
	rsync -t $work_dir/GRACE*.input* .
	rsync -t $work_dir/ICS* .
	rsync -t $work_dir/in_file* .
	rsync -t $work_dir/gracefit*.cmd* .
	rsync -t $work_dir/*.log .
	#  rsync -t $work_dir/GT*iter3.h5 .
    fi
    rm -rf ${work_dir}
    _e=`date +%s`
    printf " --  Stage_rsync on day %s  %(%Y%m%d-%H:%M:%S)T   ... DONE in %i sec \n" "$1" "-1" "$((_e - _s))"
    
}

export -f stage_init
export -f stage3_orbs
export -f stage3_fits
export -f stage3_transfer

echo "STAGE INIT"
parallel --jobs 24 stage_init ::: ${days_arr[@]}
echo "STAGE ORBS"
parallel --jobs 24 stage3_orbs ::: ${days_arr[@]}
echo "STAGE FIT"
parallel --jobs 4 stage3_fits ::: ${days_arr[@]}
#echo "STAGE TRANSFER"
#parallel --jobs 1 stage3_transfer ::: ${days_arr[@]}

exit

