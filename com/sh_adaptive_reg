#!/bin/csh -f

# script to generate a new regularisation file using adaptive regularisation based on the output solution
# found in an addnorm .fit file. It increases the sigmas in areas that received large adjustments. The script will:
#
# 1. find the date of the first file used in the addnorm solution
# 2. extract and create a .vcv file for that day, with the a posteriori parameter estimates (ICs and mascons)
# 3. rerun regularise_mascons, using the .vcv file to change the sigmas from default values
#
# P. Tregoning
# 26 August 2019

if ($#argv == 0 )then
  echo "Runstring: sh_adaptive_reg -vcv addnorm.vcv [ -f mascons_stage4_V002 -land 0.1 -ocean 0.025 -ant 0.25 -grn 0.25 -alaska 0.25 -ant_ocean 0.025 -grn_ocean 0.025 -gia 0.1 ]"
  exit
endif

########################
#  set defaults
########################
set version = ~/gt
set msc_file = ~/gg/grace/tables/mascons_stage4_V002
set land_sigma = 0.1
set ocean_sigma = 0.025
set ant_sigma = 0.25
set grn_sigma = 0.25
set alaska_sigma = 0.25
set ant_ocean_sigma = 0.025
set grn_ocean_sigma = 0.025
set gia_sigma = 0.1


############################## Decipher input command line ##############################
while ($#argv > 0 )
  set input = ( $argv )
  switch($input[1])
    case -version:
      set version = $input[2]
    breaksw
    case -f:
      set msc_file_in = $input[2]
    breaksw
    case -vcv:
      set vcv_file = $input[2]
    breaksw
    case -land:
      set land_sigma = $input[2]
    breaksw
    case -ocean:
      set ocean_sigma = $input[2]
    breaksw
    case -ant:
      set ant_sigma = $input[2]
    breaksw
    case -grn:
      set grn_sigma = $input[2]
    breaksw
    case -alaska:
      set alaska_sigma = $input[2]
    breaksw
    case -ant_ocean:
      set ant_ocean_sigma = $input[2]
    breaksw
    case -grn_ocean:
      set grn_ocean_sigma = $input[2]
    breaksw
    case -gia:
      set gia_sigma = $input[2]
    breaksw
 endsw
  if ( $#argv > 0 ) shift argv
end

alldone:
###############################################

# get the date of the first epoch from the addnorm fit file
set ymd = `head -4 $vcv_file | tail -1 | awk '{print $4, $5, $6}'`

# create the .vcv file
$version/util/addnorm2vcv $vcv_file addnorm_temp.vcv $ymd pos_E vel_E scl_E bs__E msc_E

# now run regularise_mascons to generate a new regularisation file. It will have weaker sigmas in locations where
# there was significant (ie > 0.5m?) mass change
echo $version/util/regularise_mascons $msc_file msc_addnorm_reg_${land_sigma}_${ocean_sigma}_${ant_sigma}_${grn_sigma}_${alaska_sigma}_${ant_ocean_sigma}_${grn_ocean_sigma}_${gia_sigma}.reg 1 2 3 4  ${land_sigma} ${ocean_sigma} ${ant_sigma} ${grn_sigma} ${alaska_sigma} ${ant_ocean_sigma} ${grn_ocean_sigma} ${gia_sigma} addnorm_temp.vcv 
$version/util/regularise_mascons $msc_file addnorm_reg_${land_sigma}_${ocean_sigma}_${ant_sigma}_${grn_sigma}_${alaska_sigma}_${ant_ocean_sigma}_${grn_ocean_sigma}_${gia_sigma}.reg 1 2 3 4  ${land_sigma} ${ocean_sigma} ${ant_sigma} ${grn_sigma} ${alaska_sigma} ${ant_ocean_sigma} ${grn_ocean_sigma} ${gia_sigma} addnorm_temp.vcv  | grep -v read_msc_hdr > regularise_mascons.out

 

# all done!


