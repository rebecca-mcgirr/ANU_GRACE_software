#!/bin/csh -f

# script to iterate 24hr GRACE orbits to the point that the prefit pos/vel/RR residuals are acceptable to me
# (i.e. they look like the temporal gravity field, not IC/calibration errors)
#
# P. Tregoning
# 8 February 2019

if ($#argv == 0 ) then
  echo "sh_iterate_180228  -t YYYY MM DD [ -iter0_duration 43200 -process ICs/msc/all -iter3_extn yshad_tmsc  -pos_unc 0.07 -vel_unc 0.07e-3 -kbrr_unc 0.8e-6 -kbra_unc 1.e-9 -apr_mascon_file ~/gg/grace/templates/mascon_zero.vcv -mascon_reg_file mascons_stage4.reg -type h5/bin ]"

# write some info
  echo "The philosophy of the approach is as follows (this seems to work well for the thermally-controlled periods of the mission):"
  echo " "
  echo "0.  Integrate 6 hr orbits"
  echo "0a. Estimate ICs only (pos/vel, biases, along-track scale). Tightly constrain cross-track and radial scale."
  echo " "
  echo "1.  Integrate 12 hr orbits"
  echo "1a. Estimate ICs only (pos/vel, biases, only along-track and cross-track scales). Tightly constrain radial scale"
  echo " "
  echo "2.  Integrate 24 hr orbits"
  echo "2a. Estimate ICs only (pos/vel, biases, only along-track and cross-track  scales). Tightly constrain radial scale"
  echo " "
  echo "3.  Integrate 24 hr orbits, including mascon partials in orbit files"
  echo "3a. Estimate ICs (pos/vel, biases, all three scale factors) and mascons"

  echo " "
  echo "The prefit KBRR residual from the orbits of step 3 should be ~1 um/s, indicating that the temporal gravity field dominates the residual mismodelling"
  echo "N.b. this script uses EMD2 and produces a RA only solution"

  exit
endif

# echo command line
echo "CMD: " $0 $*

#####################    DEFAULT VALUES     #######################
# version of GRACE software to use
set version = "~/gt"
# uncertainties
# 70 mm    uncertainty on all GNV1B positions
set pos_unc = 0.07        
# 70 um/s  uncertainty on all GNV1B velocities
set vel_unc = 0.07e-3     
# 0.3 um/s uncertainty on all KBR1B range rate observations
set kbrr_unc_iter0 = 1.e0
set kbrr_unc = 0.8e-6     
set kbrr_unc_iter3 = 10.e-6
# 1.0 nm/s^2 uncertainty on all KBR1B range acceleration observations
set kbra_unc_iter0 = 1.e0
set kbra_unc = 1.e-9     
# duration of orbit integration 2 minutes short of 24 hrs
set duration = 86280     
# duration of zeroeth iteration
set iter0_duration = 21600
# duration of 1st iteration
set iter1_duration = 43200

# a priori mascon file (either a temporal gravity field or zero, or whatever you want)
set apr_mascon_file = ~/gg/grace/templates/mascon_zero.vcv

# jump to iter3 gracefit ?
set process = all
set iter3_extn = ""

# mascon regularisation file
#set mascon_reg_file =  "mascons_stage4_350km_700km_0.5_0.1_0.5_0.1.reg"
#set mascon_reg_file = "mascons_0.1_0.025_0.25_0.25_0.25.reg"
#set mascon_reg_file = "mascons_stage4_V002_0.1_0.025_0.25.reg"
#set mascon_reg_file = "mascons_stage4_V003a.reg"
set mascon_reg_file = "mascons_stage5_V004.reg"

ln -s ~/gg/grace/tables/$mascon_reg_file .

# type of GTORB file
set gtorb_type = "h5"

# PT180622: which mission ? 0: GRACE, 1: GRACE FO, 2: GRACE II
set mission = 0
set RL_num = 02

# model to linearise the accelerometer data
set acc_model_AT = none
set acc_model_CT = fft
set acc_model_RD = none

##################### DECIPHER COMMAND LINE #######################
while ($#argv > 0 )
  set input = ( $argv )
  switch($input[1])
# get the day to be processed
    case -t:
      set yr     = $input[2] ; shift argv
      set month  = $input[3] ; shift argv
      set day    = $input[4] ; shift argv
    breaksw
# duration of orbit integration
     case -duration:
      set duration = $input[2]
    breaksw
# duration of zeroeth iteration orbit integration
     case -iter0_duration:
      set iter0_duration = $input[2]
    breaksw
# duration of 1st iteration orbit integration
     case -iter1_duration:
      set iter1_duration = $input[2]
    breaksw
# process ICs, mascons or all ?
     case -process:
      set process =  $input[2]
    breaksw
# iteration 3 gracefit extension on file names
     case -iter3_extn:
      set iter3_extn = $input[2]
    breaksw
# uncertainties
     case -pos_unc:
      set pos_unc = $input[2]
    breaksw
     case -vel_unc:
      set vel_unc = $input[2]
    breaksw
      case -kbrr_unc:
      set kbrr_unc = $input[2]
    breaksw
     case -kbra_unc:
      set kbra_unc = $input[2]
    breaksw
# version of software
     case -version:
      set version = $input[2]
    breaksw
# apriori mascon file
     case -apr_mascon_file:
      set apr_mascon_file = $input[2]
    breaksw
#  mascon regularisation file
     case -mascon_reg_file:
      set mascon_reg_file = $input[2]
    breaksw
# type of GTORB file
     case -type:
      set gtorb_type = $input[2]
    breaksw
# mission
     case -mission:
      set mission = $input[2]
      if($mission == 0)set RL_num = 02
      if($mission == 1)set RL_num = 04
    breaksw
    case -acc_model:
      set acc_model_AT     = $input[2] ; shift argv
      set acc_model_CT     = $input[3] ; shift argv
      set acc_model_RD     = $input[4] ; shift argv
    breaksw
 endsw
  if ( $#argv > 0 ) shift argv
end
alldone:
######################################################################


######################################################################
# set the input file depending on mission
if ($mission == 0)then
  set setup_cmdfile = "GRACE.input"
  set gracefit_cmdfile = "gracefit.cmd.template_GRACE"
  set sat1 = "A"
  set sat2 = "B"
else if ($mission == 1)then
  set setup_cmdfile = "GRACE_FO.input"
  set gracefit_cmdfile = "gracefit.cmd.template_GRACEFO"
  set sat1 = "C"
  set sat2 = "D"
else if ($mission == 2)then
  "Congratulations - you get to fund the GRACE II mission!"
else
  echo "Space gravity mission type:" $mission " doesn't exist - what is it?"
  exit 2
endif
######################################################################



# set up the input files for GRACEORB for a 6-hour initial orbit (24hrs seems too long in some cases - it can't find the good scale estimates)
# PT190208: invoke the EMD3 for linearising accelerometer obs, which has added sophistication and Bec says has less mode mixing
# PT190923: now use mascon file mascons_stage4_V002b (fixes the NW Greenland problem)
# PT191005: now use mascons_stage4_V003a
# HM200514: now use mascons_stage5_V004
# HM200602: updated sh_setup_grace for new apriori model format
${version}/com/sh_setup_grace_200602 -t $yr $month $day 00 00 00 $iter0_duration -mission $mission -type $gtorb_type -acc_model $acc_model_AT $acc_model_CT $acc_model_RD -mascon_file ~/gg/grace/tables/mascons_stage5_V004 -extend 21600 -mascon_surface topography
#ZAP -msc_apriori_model apriori_batch6_iter1.dat


# now, test whether the tide netcdf file
if ( ! -f ~/gg/grace/tables/tide_mascons/${yr}/FES2015_${yr}-${month}-${day}.nc ) then
    echo "tide file not found, check in ~/gg/grace/tables/tide_mascons"
    touch DATA.FATAL
    exit 2
endif

if ( ${process} == "msc" ) then
   echo "skipping to mascon iteration"
   set apr_IC=${yr}_IC.dat
   echo "ICs taken from " ${apr_IC}
   goto iter3
endif

###############################
##                           ##
##  I T E R A T I O N    0   ##
##                           ##
###############################
echo
echo "## Begin Iteration 0 ##"


# now, create a GRACE.input with the required settings
cat ${setup_cmdfile}  > ${setup_cmdfile}.iter0

# run the two orbit integrations
setenv OMP_NUM_THREADS 10
${version}/graceorb/graceorb ${setup_cmdfile}.iter0 in_file_${sat1}_${yr}-${month}-${day}_00 0 0 0 &
${version}/graceorb/graceorb ${setup_cmdfile}.iter0 in_file_${sat2}_${yr}-${month}-${day}_00 0 0 0 &
wait

# rename the orbits
mv GTORB_${yr}-${month}-${day}_00-00-00_${sat1}_${RL_num}.$gtorb_type  GTORB_${yr}-${month}-${day}_00-00-00_${sat1}_${RL_num}_IC_iter0.$gtorb_type
mv GTORB_${yr}-${month}-${day}_00-00-00_${sat2}_${RL_num}.$gtorb_type  GTORB_${yr}-${month}-${day}_00-00-00_${sat2}_${RL_num}_IC_iter0.$gtorb_type

# set up the gracefit command file for this iteration
# PT180316: no EMD filtering for the zeroeth iteration (it doesn't work as well as doing it)
# PT180330: also downweight the kbrr and kbra for the zeroeth iteration (bad solutions for 2017 data)
cp ~/gg/grace/templates/${gracefit_cmdfile} gracefit_IC_iter0.cmd
sed -i 's/shadow:   1/shadow:   0/'  gracefit_IC_iter0.cmd
sed -i 's/ mission: M/ mission: '"$mission"'/' gracefit_IC_iter0.cmd
sed -i 's/PPP/'"$pos_unc"'/g' gracefit_IC_iter0.cmd
sed -i 's/VVV/'"$vel_unc"'/g' gracefit_IC_iter0.cmd
sed -i 's/KBRR_SIG/'"$kbrr_unc_iter0"'/' gracefit_IC_iter0.cmd
sed -i 's/KBRA_SIG/'"$kbra_unc_iter0"'/' gracefit_IC_iter0.cmd
sed -i 's/SCLX/1.0/' gracefit_IC_iter0.cmd
sed -i 's/SCLY/1.e-16/' gracefit_IC_iter0.cmd
sed -i 's/SCLZ/1.e-16/' gracefit_IC_iter0.cmd

# run gracefit, estimating pos/vel/scl/bias (no mascons)
setenv OMP_NUM_THREADS 1
${version}/gracefit/gracefit gracefit_IC_iter0.cmd IC_${yr}_${month}_${day}_iter0.rms 4 GTORB_${yr}-${month}-${day}_00-00-00_${sat1}_${RL_num}_IC_iter0.$gtorb_type GTORB_${yr}-${month}-${day}_00-00-00_${sat2}_${RL_num}_IC_iter0.$gtorb_type $yr $month $day ~/gg/grace/tables/msc_zero.dat 0 0 0 0 0 0 0 0 0 0 0 0
mv prefit.res prefit_iter0.res

# ${version}/com/sh_plot_GTORB_diff -t GTORB_${yr}-${month}-${day}_00-00-00_${sat1}_02.bin GTORB_${yr}-${month}-${day}_00-00-00_${sat1}_02_IC_iter0.bin -x 1 5000 -prefit prefit_iter0.res -yr 100 

jump:
###############################
##                           ##
##  I T E R A T I O N    1   ##
##                           ##
###############################
echo
echo "## Begin Iteration 1 ##"

# change the required duration in the ICS file for iteration 1 (default is 12 hrs)
@ epochs = ( $iter1_duration / 5 )
foreach FILE (ICS*)
    sed -i "8s/.*/$epochs/" $FILE
    end
    
# update the scale and bias from the previous inversion
if ($mission == 0) then
  cp ${setup_cmdfile} ${setup_cmdfile}.iter1 
  sed -i 's/APRIORI_FILE      :.*/APRIORI_FILE      : IC_'"${yr}"'_'"${month}"'_'"${day}"'_iter0.vcv/'  ${setup_cmdfile}.iter1
  sed -i 's/USE_APRIORI_ICS   : 0/USE_APRIORI_ICS   : 12/'  ${setup_cmdfile}.iter1 
  sed -i 's/MASCON            : N/MASCON            : N/'  ${setup_cmdfile}.iter1
else if ($mission == 1) then
  cp ${setup_cmdfile} ${setup_cmdfile}.iter1 
  sed -i 's/APRIORI_FILE      :.*/APRIORI_FILE      : IC_'"${yr}"'_'"${month}"'_'"${day}"'_iter0.vcv/'  ${setup_cmdfile}.iter1
  sed -i 's/USE_APRIORI_ICS   : 0/USE_APRIORI_ICS   : 12/'  ${setup_cmdfile}.iter1 
  sed -i 's/MASCON            : N/MASCON            : N/'  ${setup_cmdfile}.iter1
endif

# reintegrate the orbits
setenv OMP_NUM_THREADS 10
${version}/graceorb/graceorb ${setup_cmdfile}.iter1 in_file_${sat1}_${yr}-${month}-${day}_00 0 0 0 &
${version}/graceorb/graceorb ${setup_cmdfile}.iter1 in_file_${sat2}_${yr}-${month}-${day}_00 0 0 0 &
wait

# rename the orbits
mv GTORB_${yr}-${month}-${day}_00-00-00_${sat1}_${RL_num}.$gtorb_type  GTORB_${yr}-${month}-${day}_00-00-00_${sat1}_${RL_num}_IC_iter1.$gtorb_type
mv GTORB_${yr}-${month}-${day}_00-00-00_${sat2}_${RL_num}.$gtorb_type  GTORB_${yr}-${month}-${day}_00-00-00_${sat2}_${RL_num}_IC_iter1.$gtorb_type

# set up the gracefit command file for this iteration. Use the range rate inter-satellite measurements but not the range acceleration. Tight(ish) constraints on scale
cp ~/gg/grace/templates/${gracefit_cmdfile} gracefit_IC_iter1.cmd
sed -i 's/shadow:   1/shadow:   0/'  gracefit_IC_iter1.cmd
sed -i 's/ mission: M/ mission: '"$mission"'/' gracefit_IC_iter1.cmd
sed -i 's/PPP/'"$pos_unc"'/g' gracefit_IC_iter1.cmd
sed -i 's/VVV/'"$vel_unc"'/g' gracefit_IC_iter1.cmd
sed -i 's/KBRR_SIG/'"$kbrr_unc"'/' gracefit_IC_iter1.cmd
sed -i 's/KBRA_SIG/'"$kbra_unc_iter0"'/' gracefit_IC_iter1.cmd
sed -i 's/SCLX/1.0e-2/' gracefit_IC_iter1.cmd
sed -i 's/SCLY/1.e-2/' gracefit_IC_iter1.cmd
sed -i 's/SCLZ/1.e-3/' gracefit_IC_iter1.cmd





# run gracefit, estimating pos/vel/scl/bias (no mascons)
setenv OMP_NUM_THREADS 1
${version}/gracefit/gracefit gracefit_IC_iter1.cmd IC_${yr}_${month}_${day}_iter1.rms 4 GTORB_${yr}-${month}-${day}_00-00-00_${sat1}_${RL_num}_IC_iter1.$gtorb_type GTORB_${yr}-${month}-${day}_00-00-00_${sat2}_${RL_num}_IC_iter1.$gtorb_type $yr $month $day ~/gg/grace/tables/msc_zero.dat 0 0 0 0 0 0 0 0 0 0 0 0
mv prefit.res prefit_iter1.res

# ${version}/com/sh_plot_GTORB_diff -t GTORB_${yr}-${month}-${day}_00-00-00_${sat1}_${RL_num}.bin GTORB_${yr}-${month}-${day}_00-00-00_${sat2}_${RL_num}_IC_iter1.bin -x 1 9000 -prefit prefit_iter1.res -yr 5 


###############################
##                           ##
##  I T E R A T I O N    2   ##
##                           ##
###############################
echo
echo "## Begin Iteration 2 ##"

# change the required duration in the ICS file for iteration 2 and later (default is 24 hrs)
@ epochs = ( $duration / 5 )
foreach FILE (ICS*)
    sed -i "8s/.*/$epochs/" $FILE
    end

# update the scale and bias from the previous inversion
if ($mission == 0) then
  cp ${setup_cmdfile} ${setup_cmdfile}.iter2 
  sed -i 's/APRIORI_FILE      :.*/APRIORI_FILE      : IC_'"${yr}"'_'"${month}"'_'"${day}"'_iter1.vcv/'  ${setup_cmdfile}.iter2
  sed -i 's/USE_APRIORI_ICS   : 0/USE_APRIORI_ICS   : 12/'  ${setup_cmdfile}.iter2 
  sed -i 's/MASCON            : N/MASCON            : N/'  ${setup_cmdfile}.iter2
else if($mission == 1) then
  cp ${setup_cmdfile}  ${setup_cmdfile}.iter2
  sed -i 's/APRIORI_FILE      :.*/APRIORI_FILE      : IC_'"${yr}"'_'"${month}"'_'"${day}"'_iter1.vcv/'  ${setup_cmdfile}.iter2
  sed -i 's/USE_APRIORI_ICS   : 0/USE_APRIORI_ICS   : 12/'  ${setup_cmdfile}.iter2 
  sed -i 's/MASCON            : N/MASCON            : N/'  ${setup_cmdfile}.iter2
endif

# reintegrate the orbits
setenv OMP_NUM_THREADS 10
${version}/graceorb/graceorb ${setup_cmdfile}.iter2 in_file_${sat1}_${yr}-${month}-${day}_00 0 0 0 &
${version}/graceorb/graceorb ${setup_cmdfile}.iter2 in_file_${sat2}_${yr}-${month}-${day}_00 0 0 0 &
wait

# rename the orbits
mv GTORB_${yr}-${month}-${day}_00-00-00_${sat1}_${RL_num}.$gtorb_type  GTORB_${yr}-${month}-${day}_00-00-00_${sat1}_${RL_num}_IC_iter2.$gtorb_type
mv GTORB_${yr}-${month}-${day}_00-00-00_${sat2}_${RL_num}.$gtorb_type  GTORB_${yr}-${month}-${day}_00-00-00_${sat2}_${RL_num}_IC_iter2.$gtorb_type
 
# set up the gracefit command file for this iteration. Now use the inter-satellite range rate measurements (but still not the range acceleration)
# PT190806: put the radial scale factor constraint back to 1.e-2 to avoid small and/or negative scale factor estimates in the iter2 inversion results.
cp ~/gg/grace/templates/${gracefit_cmdfile} gracefit_IC_iter2.cmd
sed -i 's/shadow:   1/shadow:   0/'  gracefit_IC_iter2.cmd
sed -i 's/ mission: M/ mission: '"$mission"'/' gracefit_IC_iter2.cmd
sed -i 's/PPP/'"$pos_unc"'/g' gracefit_IC_iter2.cmd
sed -i 's/VVV/'"$vel_unc"'/g' gracefit_IC_iter2.cmd
sed -i 's/KBRR_SIG/'"$kbrr_unc"'/' gracefit_IC_iter2.cmd
sed -i 's/KBRA_SIG/'"$kbra_unc"'/' gracefit_IC_iter2.cmd
sed -i 's/SCLX/1.0/' gracefit_IC_iter2.cmd
sed -i 's/SCLY/1.e-2/' gracefit_IC_iter2.cmd
sed -i 's/SCLZ/1.e-3/' gracefit_IC_iter2.cmd
sed -i 's/ kbrr_decomp_components:.*/ kbrr_decomp_components:  2 2/' gracefit_IC_iter2.cmd
sed -i 's/kb_NR: 0 0/kb_NR: 0 1/' gracefit_IC_iter2.cmd



# run gracefit, estimating pos/vel/scl/bias (no mascons).
setenv OMP_NUM_THREADS 1
${version}/gracefit/gracefit gracefit_IC_iter2.cmd IC_${yr}_${month}_${day}_iter2.rms 4 GTORB_${yr}-${month}-${day}_00-00-00_${sat1}_${RL_num}_IC_iter2.$gtorb_type GTORB_${yr}-${month}-${day}_00-00-00_${sat2}_${RL_num}_IC_iter2.$gtorb_type $yr $month $day ~/gg/grace/tables/msc_zero.dat 0 0 0 0 0 0 0 0 0 0 0 0
mv prefit.res prefit_iter2.res

# and for a mascon solution if we want (for 2017 GRACE data)
# setenv OMP_NUM_THREADS 10
# ${version}/gracefit/gracefit gracefit_msc_iter2.cmd msc_${yr}_${month}_${day}_iter2.rms 4 GTORB_${yr}-${month}-${day}_00-00-00_${sat1}_${RL_num}_IC_iter2.$gtorb_type GTORB_${yr}-${month}-${day}_00-00-00_${sat1}_${RL_num}_IC_iter2.$gtorb_type $yr $month $day $mascon_reg_file 0 0 0 0 0 0 0 0 0 0 0 0

if ( ${process} == "ICs" ) then
   echo "IC iterations finished"
   exit
endif


###############################
##                           ##
##  I T E R A T I O N    3   ##
##                           ##
###############################
echo
echo ## Begin Iteration 3 ##
iter3:

# set the required duration in the ICS file (default is 24hrs)           
@ epochs = ( $duration / 5 )
foreach FILE (ICS*)
    sed -i "8s/.*/$epochs/" $FILE
    end

# update the scale and bias from the previous inversion
## if ($mission == 0) then
##   cp ${setup_cmdfile} ${setup_cmdfile}.iter3
##   sed -i 's/APRIORI_FILE      : GRACE_IC.dat/APRIORI_FILE      : '"${apr_IC}"'/'     ${setup_cmdfile}.iter3 
##   sed -i 's/USE_APRIORI_ICS   : 0/USE_APRIORI_ICS   : 15/' ${setup_cmdfile}.iter3  
##   sed -i 's/MASCON            : N/MASCON            : Y/' ${setup_cmdfile}.iter3
## else if ($mission == 1) then
##   cp ${setup_cmdfile}  ${setup_cmdfile}.iter3
##   sed -i 's/APRIORI_FILE      : GRACE_FO_IC.dat/APRIORI_FILE      : '"${apr_IC}"'/' ${setup_cmdfile}.iter3 
##   sed -i 's/USE_APRIORI_ICS   : 0/USE_APRIORI_ICS   : 15/'  ${setup_cmdfile}.iter3
##   sed -i 's/MASCON            : N/MASCON            : Y/' ${setup_cmdfile}.iter3
## endif


cp ${setup_cmdfile}  ${setup_cmdfile}.iter3
sed -i 's/APRIORI_FILE      :.*/APRIORI_FILE      : '"${apr_IC}"'/' ${setup_cmdfile}.iter3
sed -i 's/USE_APRIORI_ICS   : 0/USE_APRIORI_ICS   : 15/'  ${setup_cmdfile}.iter3
sed -i 's/MASCON            : N/MASCON            : Y/' ${setup_cmdfile}.iter3

# PT190927: enter the a priori mascon vcv file for this month. It goes into the GRACE*.input file
#cat ${setup_cmdfile}.iter3 | 


#ZAP   sed -i 's/MSC_APRIORI_FILE  : none/MSC_APRIORI_FILE  : msc_apriori_'"${yr}"'_'"${month}"'.vcv/' ${setup_cmdfile}.iter3
#ZAP  sed -i 's/USE_APRIORI_MCS   : N/USE_APRIORI_MCS   : Y/' ${setup_cmdfile}.iter3

# reintegrate the orbits
setenv OMP_NUM_THREADS 10
${version}/graceorb/graceorb ${setup_cmdfile}.iter3 in_file_${sat1}_${yr}-${month}-${day}_00 0 0 0 &
${version}/graceorb/graceorb ${setup_cmdfile}.iter3 in_file_${sat2}_${yr}-${month}-${day}_00 0 0 0 &
wait

# rename the orbits
mv GTORB_${yr}-${month}-${day}_00-00-00_${sat1}_${RL_num}.$gtorb_type  GTORB_${yr}-${month}-${day}_00-00-00_${sat1}_${RL_num}_IC_iter3.$gtorb_type
mv GTORB_${yr}-${month}-${day}_00-00-00_${sat2}_${RL_num}.$gtorb_type  GTORB_${yr}-${month}-${day}_00-00-00_${sat2}_${RL_num}_IC_iter3.$gtorb_type

# run gracefit, estimating pos/vel/scl/bias + tightly constrained mascons

iter3_gracefit:
# PT190725: switch on the cosine fft filter on the kbrr and kbra. Low- and high-frequency cutoffs defined by Bec McGirr from various tests.
cp ~/gg/grace/templates/${gracefit_cmdfile} gracefit_msc_iter3.cmd
sed -i 's/shadow:   0/shadow:   1/'  gracefit_msc_iter3.cmd
sed -i 's/ mission: M/ mission: '"$mission"'/' gracefit_msc_iter3.cmd
sed -i 's/PPP/'"$pos_unc"'/g' gracefit_msc_iter3.cmd
sed -i 's/VVV/'"$vel_unc"'/g' gracefit_msc_iter3.cmd
sed -i 's/KBRR_SIG/'"$kbrr_unc_iter3"'/' gracefit_msc_iter3.cmd
sed -i 's/KBRA_SIG/'"$kbra_unc"'/' gracefit_msc_iter3.cmd
sed -i 's/SCLX/1.0/' gracefit_msc_iter3.cmd
sed -i 's/SCLY/1.0/' gracefit_msc_iter3.cmd
sed -i 's/SCLZ/1.0/' gracefit_msc_iter3.cmd
sed -i 's/ kb_cos_fft: 0 / kb_cos_fft: 1 /' gracefit_msc_iter3.cmd
sed -i 's/kb_NR: 0 0/kb_NR: 0 1/' gracefit_msc_iter3.cmd
sed -i 's/mascons:            0/mascons:            1/' gracefit_msc_iter3.cmd
sed -i 's/msc_len_const:      0/msc_len_const:      1/' gracefit_msc_iter3.cmd



setenv OMP_NUM_THREADS 10
${version}/gracefit/gracefit gracefit_msc_iter3.cmd msc_${yr}_${month}_${day}_iter3.rms 4 GTORB_${yr}-${month}-${day}_00-00-00_${sat1}_${RL_num}_IC_iter3.$gtorb_type GTORB_${yr}-${month}-${day}_00-00-00_${sat2}_${RL_num}_IC_iter3.$gtorb_type $yr $month $day $mascon_reg_file 0 0 0 0 0 0 0 0 0 0 0 0

mv prefit.res prefit_iter3.res

exit



