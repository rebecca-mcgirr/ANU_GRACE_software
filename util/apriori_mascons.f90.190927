  program apriori_mascons

! program to generate a file (in vcv format) of mascon values. The input information will be
! a set of parameters for a quadratic+annual model which is a best-fit to a time series of
! mass change estimates (in terms of EWH) for each mascon in the V002 mascon file.
!
! P. Tregoning
! 25 September 2019

  use mascon_mod          ! defines all the mascon arrays

  implicit none

! command line arguments
  character*150 :: mascon_file      ! file containing mascon geometry
  character*150 :: msc_model_file   ! file containing the quadratic+annual model parameters for the corresponding mascons
  character*150 :: user_mascon_file ! a possible different mascon file onto which we want to calculate the EWH
  integer*4     :: date(3),doy      ! epoch onto which to calculate the mascon EWH values (yr,mo,dd)
  character*150 :: usr_msc_file     ! possible different mascon file onto which to calculate the EWH values
  character*150 :: output_file      ! hardwired file of form "msc_apriori_YYYY_MM.vcv"

! mascon EWH model variables
  real(kind=8),allocatable :: msc_model(:,:)   ! array to hold the mascon EWH model (total_prim, 5)
  real(kind=8),allocatable :: apriori_msc(:)   ! array to store the calculated a priori EWH mascon values

! mascon file and user mascon geometry variables
  integer*4                :: tern_number
  real(kind=8),allocatable :: mcon_prim_usr(:,:)
  integer*4                :: total_prim_usr
  logical                  :: same_msc_geom
  real(kind=8)             :: lat_spacing
  integer*4                :: model_msc_number

! variables for ensuring conservation of mass
  real(kind=8)  :: land_area,land_vol,ocean_area,ocean_vol

! local variables
  real(kind=8)  :: dec_yr           ! decimal year of required epoch
  integer*4     :: ioerr
  integer*4     :: imsc
  real(kind=8)  :: pi,w,dt,lon,lat
  character*110 :: arg
  integer*4   :: trimlen

! unit numbers
  integer*4, parameter :: lumsc=10, lumsc_model=11,lumsc_usr=12,luout=13
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! initialise variables and declare some constants
  date = 0
  pi = 4.d0*datan(1.d0)
  w = 2.d0*pi
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!



!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! read the command line
  call getarg(1,mascon_file)
  if(mascon_file(1:1) == " ")then
    print*,"apriori_mascons mascons_stage4_V002 msc_model.all 2016 01 [mascons_stage4_V002b]"
    stop
  endif

  ! file containing msc EWH model
  call getarg(2,msc_model_file)
  open(lumsc_model,file=msc_model_file,status='old',iostat=ioerr)
  if(ioerr /= 0)then
    call report_stat('FATAL','UTIL','apriori_mascons',msc_model_file,"Error opening mascon EWH model file. Does it exist?",ioerr)
  else
    call report_stat('STATUS','UTIL','apriori_mascons',msc_model_file,"Opened mascon EWH model file. ",ioerr)
  endif

  ! required epoch
  call getarg(3,arg)
  read(arg,*)date(1)
  call getarg(4,arg)
  read(arg,*)date(2)
  call getarg(5,arg)
  read(arg,*)date(3)

  call getarg(6,usr_msc_file)
  if(usr_msc_file(1:1) == " ")then
    call report_stat('STATUS','UTIL','apriori_mascons',mascon_file,"Will calculate mascons on same coordinates in file.",0)
    usr_msc_file = mascon_file
    same_msc_geom = .true.
  else
    same_msc_geom = .false.
  endif

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! check whether the mascon geometry file for the output is the same as that of the msc_model file. If not, read the output mascon geometry
! and store it somewhere.
  if(.not. same_msc_geom)then
    call report_stat('STATUS','UTIL','apriori_mascons',usr_msc_file &
                     ,"Mascons will be computed on different file from msc EWH model values",0)
    call read_msc_hdr(lumsc_usr,mascon_file,msc_hdr_lines,max_hdr_lines,n_hdr_lines,msc_hdr_code,max_prim,max_sec,max_tern &
                                ,max_tern_per_prim,max_tern_per_sec,max_sec_per_prim)
    call allocate_mascon_arrays
    ! PT180220: using trimlen here doesn't work - the subroutine is expecting a C*150, so pass the whole thing through
    !  call read_mascon_file(lumsc_in,mascon_file(1:trimlen(mascon_file)))
    call read_mascon_file(lumsc_usr,mascon_file)

    ! now allocate a separate set of mascon arrays in which to store these values. We just need the primary mascon coords (lat/lon)
    allocate(mcon_prim_usr(max_prim,4))    ! primary mascon info (lat/lon/rad/area/hgt/density/#sec/#tern/#first secondary/tidal flag/%land/geoid)
    mcon_prim_usr(:,1) = mcon_prim(:,1)    ! save the latitudes
    mcon_prim_usr(:,2) = mcon_prim(:,2)    ! save the longitudes
    mcon_prim_usr(:,3) = mcon_prim(:,4)    ! save the area of the primary mascon
    mcon_prim_usr(:,4) = mcon_prim(:,6)    ! save the density of the primary mascon
    total_prim_usr = total_prim

    ! deallocate the arrays
    call deallocate_mascon_arrays
  endif
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!



!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! read the mascon file that relates to the mascon EWH model
  call read_msc_hdr(lumsc,mascon_file,msc_hdr_lines,max_hdr_lines,n_hdr_lines,msc_hdr_code,max_prim,max_sec,max_tern &
                                ,max_tern_per_prim,max_tern_per_sec,max_sec_per_prim)
  call allocate_mascon_arrays
! PT180220: using trimlen here doesn't work - the subroutine is expecting a C*150, so pass the whole thing through
!  call read_mascon_file(lumsc_in,mascon_file(1:trimlen(mascon_file)))
  call read_mascon_file(lumsc,mascon_file)
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! set up the mcon_prim_usr array in the event that the same mascon geometry was used for the EWH model and the output. We
! can then use the array "mcon_prim_usr" for either case.
  if(same_msc_geom)then
    total_prim_usr = total_prim
    allocate(mcon_prim_usr(total_prim_usr,4)
    mcon_prim_usr(:,1) = mcon_prim(:,1)    ! save the latitudes
    mcon_prim_usr(:,2) = mcon_prim(:,2)    ! save the longitudes
    mcon_prim_usr(:,3) = mcon_prim(:,4)    ! save the area of the primary mascon
    mcon_prim_usr(:,4) = mcon_prim(:,6)    ! save the density of the primary mascon
  endif
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! read in the mascon EWH parameter model. File has format:
! longitude  latitude  offset  rate  ampl_sine  ampl_cos  accel cubic
  allocate(msc_model(total_prim,6))
  do imsc=1,total_prim
    read(lumsc_model,*)lon,lat,msc_model(imsc,:)
  enddo
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!



!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! write a VCV file header
  write(output_file,'(a,i4,a,i2.2,a)')"msc_apriori_",date(1),"_",date(2),".vcv"
  open(luout,file=output_file,status='unknown')
  write(luout,'(a,a)')"V2 APRIORI  VCV  created from file",trimlen(msc_model_file)
  write(luout,'(a)')"An incomplete VCV file, containing only mascon values to be read"

  write(luout,'(a)')"SOLUTION A PRIORI AND VECTOR:"
  write(luout,'(a)')"PARAMETER                     A PRIORI             VECTOR            SIGMA"
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!  now we can evaluate the quadratic+annual model on each primary mascon - either using the same or user-entered mascon geometry
  call ymd_to_doy(date,doy)
  dec_yr = dble(date(1)) + dble(doy)/365.d0
  dt = dec_yr - 2003.0

  ! if output mascon geometry is the same as msc_model_file geometry
  if(same_msc_geom)then
    allocate(apriori_msc(total_prim))
    do imsc=1,total_prim
      apriori_msc(imsc) =  msc_model(imsc,1) + msc_model(imsc,2)*dt + msc_model(imsc,3)*dsin(w*dt) + msc_model(imsc,4)*dcos(w*dt) &
                         + msc_model(imsc,5)*dt**2 + msc_model(imsc,6)*dt**3
    enddo

  ! if user has specified a different output mascon geometry
  else
    allocate(apriori_msc(total_prim_usr))
    do imsc=1,total_prim

      ! need to find out which primary mascon in the msc_model_file geometry this user primary mascon resides in
      ! set the ternary latitudinal spacing
      if(imsc == 1)lat_spacing = 10.d0/60.d0     ! default is 10' ternary masons in latitude

      ! establish the array that contains how many ternary latitude bands and how many ternary mascons per band
      call tern_lat_bands_ell(lat_spacing)

      ! find which ternary it is in
      call calc_which_ternary(.false.,mcon_prim_usr(imsc,1),mcon_prim_usr(imsc,2),lat_spacing,tern_number)
      model_msc_number = mcon_tern_ptr(tern_number,1)

      ! now calculate the apriori EWH using the appropriate primary mascon model values
      apriori_msc(imsc) =  msc_model(model_msc_number,1) + msc_model(model_msc_number,2)*dt &                       ! offset and rate
                         + msc_model(model_msc_number,3)*dsin(w*dt) + msc_model(model_msc_number,4)*dcos(w*dt) &    ! annual variation
                         + msc_model(model_msc_number,5)*dt**2                                                      ! quadratic term
    enddo

  endif 
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! need to make sure that the a priori model is mass conserving before we write it out to the vcv file ...

! calculate the sum of the volume changes across all mascons. That is, sum(a priori EWH x mascon area) should be zero
  land_area = 0.d0
  land_vol = 0.d0
  ocean_area = 0.d0
  ocean_vol = 0.d0
  do imsc=1,total_prim_usr
    land_area = land_area + 
! take the residual volume and assign a correction across all ocean mascons, proportional to the area of each ocean mascon


      ! write out in vcv format
      write(luout,'(i5,a4,i5.5,a,12x,f17.7,f17.7,f17.7)')imsc,". MC",imsc," (m)",apriori_msc(imsc)*1.e-3,apriori_msc(imsc)*1.e-3,1.d0


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


  call report_stat('STATUS','UTIL','apriori_mascons',output_file,"Written out apriori  file.",0)

  end

